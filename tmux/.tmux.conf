# Set prefix to space
unbind-key C-b
set-option -g prefix C-Space

# Bindings:
# - to see current bindings:
#   tmux list-keys

# Open panes with the path of the current pane
unbind-key c
bind-key c new-window -c '#{pane_current_path}'
unbind-key %
bind-key % split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key '"' split-window -v -c '#{pane_current_path}'

# Fast toggle between current and last-used window (normally prefix-l).
bind-key ^space last-window

# Move between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# `^space ^space` is awfully close to the destructive `^space space`, which
# trashes the layout. Providea quick way to get back to the previous-used
# layout.
#
# Normally used for previous-window, but I never use that, prefering numeric
# access.
bind-key p select-layout -o

# Intuitive window-splitting keys.
bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-"

bind-key -r '<' swap-window -d -t '{previous}' # Move window left.
bind-key -r '>' swap-window -d -t '{next}' # Move window right.

# Status bar.
set-option -g status-style 'fg=colour20,bg=colour18,bold,italics' # fg=base04 bg=base01
set-option -g status-left-length 40
set-option -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
set-option -g status-right "#(~/.asdf/shims/pomo) #[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p"
set-option -g status-interval 1 # Default is 15.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set-option -g renumber-windows on

# Highlight active window.
set-option -w -g window-status-current-style bg=red

# Make widths constant with or without flags.
set-option -w -g window-status-current-format ' #I:#W#F '
set-option -w -g window-status-format '#I:#W#{?#{==:#F,},  ,#F }'

set-option -w -g xterm-keys on

# Enable vi keys
setw -g mode-keys vi

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set-option -g mouse on

# v in copy mode starts making selection
bind-key -T copy-mode-vi v send -X begin-selection
# y to copy the selection
bind-key -T copy-mode-vi y send -X copy-selection

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind Escape copy-mode

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set-option -w -g main-pane-width 85

set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc,alacritty:Tc'

set-option -g history-limit 10000

# Start window and pane numbering at 1, (0 is too hard to reach).
set-option -g base-index 1
set-option -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-Space.
set-option -s escape-time 0

# Dynamically update iTerm tab and window titles.
set-option -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set-option -g focus-events on

# Change tmux's own window titles.
set-option -w -g automatic-rename on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off

# - #S = session name
# - #T = pane title (~/.zshrc sets this to the last/current command)
set-option -g set-titles-string "#S > #T"

# Show bells in window titles.
set-option -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Add : to the default list (" -_@") of word separators.
set-option -ga word-separators :/

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1

# PBCopy.
bind-key y run-shell "tmux save-buffer - | pbcopy"

# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Search back to last prompt (mnemonic: "[b]ack").
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "โฏ"\; send-keys -X next-word

bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Analagous with naked C-l which resets/clears the terminal.
bind-key C-l clear-history

# COLOUR (base16)

# This theme is a 256 color variant and it uses the color codes of the base16
# (256 color) terminal/shell themes:
# https://github.com/chriskempson/base16
# https://github.com/chriskempson/base16-shell

# This theme may be used in combination with any base16 256 color
# terminal/shell theme.

# Base16 Styling Guidelines:
# base00 - Default Background
# base01 - Lighter Background (Used for status bars)
# base02 - Selection Background
# base03 - Comments, Invisibles, Line Highlighting
# base04 - Dark Foreground (Used for status bars)
# base05 - Default Foreground, Caret, Delimiters, Operators
# base06 - Light Foreground (Not often used)
# base07 - Light Background (Not often used)
# base08 - Variables, XML Tags, Markup Link Text, Markup Lists, Diff Deleted
# base09 - Integers, Boolean, Constants, XML Attributes, Markup Link Url
# base0A - Classes, Markup Bold, Search Text Background
# base0B - Strings, Inherited Class, Markup Code, Diff Inserted
# base0C - Support, Regular Expressions, Escape Characters, Markup Quotes
# base0D - Functions, Methods, Attribute IDs, Headings
# base0E - Keywords, Storage, Selector, Markup Italic, Diff Changed

# Use colortest script from base16-shell to get color assignments.

# default statusbar colors
# set-option -g status-style 'fg=colour20,bg=colour18,bold,italics' # fg=base04 bg=base01

# default window title colors
set-window-option -g window-status-style 'bg=default,fg=colour20' # base04

# active window title colors
set-window-option -g window-status-current-style 'bg=default,fg=colour07' # base05

# pane border
set-option -g pane-border-style 'fg=colour18' # base01
set-option -g pane-active-border-style 'fg=colour19' # base02

# message text
set-option -g message-style 'bg=colour18,fg=colour07' # bg=base01, fg=base05

# pane number display
set-option -g display-panes-active-colour colour02 # base0B
set-option -g display-panes-colour colour03 # base0A

# clock
set-window-option -g clock-mode-colour colour02 #base0B

# bell
set-window-option -g window-status-bell-style fg=colour18,bg=colour01 # base01, base 08

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

if-shell "[[ `tmux -V | cut -c -8 | cut -d' ' -f2` > 3.2 ]]" \
    'set -g allow-passthrough on'
