run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'

# Setting the prefix from C-b to C-Space
unbind C-Space
set -g prefix C-Space
#
#
# Free the original Ctrl-b prefix keybinding
unbind C-b
#
# Ensure that we can send C-Space to other apps
bind C-Space send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index of panes to 1 instead of 0
setw -g pane-base-index 1

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Split panes with | and -
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Move between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind Space last-window

# Automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# mouse support
set -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal "tmux-256color"

# enable vi keys
setw -g mode-keys vi

# escape turns on copy mode
bind Escape copy-mode

# v in copy mode starts making selection
bind-key -T copy-mode-vi v send -X begin-selection
# y to copy the selection
bind-key -T copy-mode-vi y send -X copy-selection

# make Prefix p paste the buffer
unbind p
bind p paste-buffer

# shortcut for synchronize-panes toggle
bind C-s set-window-option synchronize-panes

# split pane and retain the currrent directory of existing pane
bind _ split-window -v -c "#{pane_current_path}"
if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | bc)" = 1 ]' \
    'bind \ split-window -h -c "#{pane_current_path}"'
if-shell -b '[ "$(echo "$TMUX_VERSION >= 3.0" | bc)" = 1 ]' \
    'bind \\ split-window -h -c "#{pane_current_path}"'

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"
#
# Load mac-specific settings
if-shell "(uname | grep -q Darwin) && [ -f ~/.tmux.mac.conf ]" "source-file ~/.tmux.mac.conf"

# load private settings if they exist
if-shell "[ -f ~/.tmux.private]" "source ~/.tmux.private"

# POSIX clears screen using C-l, so allow
# Prefix C-l to do this
bind C-l send-keys 'C-l'

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Restore pre-2.1 behavior of scrolling with the scrollwheel in Vim, less, copy
# mode etc, otherwise entering copy mode if not already in it.
#
#   if in copy mode (pane_in_mode) || using the mouse already (mouse_any_flag)
#     pass through mouse events to current pane (send -Mt=)
#   elsif in alternate screen mode
#     send `Up` key
#   else
#     enter copy mode (-e exits if we scroll to the bottom)
#   end
#
bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}" "send -t= Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -Ft= "#{alternate_on}"  "send -t= Down" "send -Mt="'

# Recommended by neovim's checkhealth
set-option -sa terminal-overrides ',xterm*:RGB'

# Resize panes easily
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 2
bind -n S-Up resize-pane -U 2

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 10
bind -n C-Up resize-pane -U 10

bind-key b break-pane -d
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

bind-key C-j choose-tree

bind-key s switch-client -l

set -g @dracula-plugins " "
set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g @dracula-left-icon-padding 0

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

run -b '~/.tmux/plugins/tpm/tpm'
