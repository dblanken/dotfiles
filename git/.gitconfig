[color]
    ui = true
[user]
    name = David Blankenship
    email = dblanken@iu.edu
[alias]
    ; abbrev = !sh -c 'git rev-parse --short ${1-`echo HEAD`}' -
    ; ack = grep --break --heading -n
    ; br = branch
    ; co = checkout
    ; count = !git --no-pager log --oneline | wc -l
    ; cp = cherry-pick

    ; full = show --format=fuller

	; # equivalent to: graph --all
    ; gr = !git --paginate log --graph --all --pretty=format:'%C(auto)%h%Creset%C(auto)%d%Creset %s %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset'

	; # requires Git 1.6.3 or later; %C(auto) requires Git 1.8.3 or later
    ; graph = !git --paginate log --graph --pretty=format:'%C(auto)%h%Creset%C(auto)%d%Creset %s %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset'

	; # Show just the HEAD commit message (no indent) and nothing else
    ; message = !git --paginate log -1 --pretty=format:%B
    ; msg = message

    ; no-edit = commit --amend --no-edit

	; # %C(auto) requires Git 1.8.3 or later
    ; one = !git --paginate log --pretty=format:'%C(auto)%h%Creset %s%C(auto)%d%Creset %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset'
    ; oneline = !git --paginate log --pretty=format:'%C(auto)%h%Creset %s%C(auto)%d%Creset %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset'

	; # requires Git 1.7.11.3 or later
    ; reword = commit --amend --only -v --

	; # requires Git 1.6.2 or later
    ; rollback = !sh -c 'git reset --merge HEAD~${1-1}' -

    ; st = status
    ; staged = diff --cached --ignore-submodules=dirty

	; # %C(auto) requires Git 1.8.3 or later
    ; ten = !git --paginate log -10 --pretty=format:'%C(auto)%h%Creset%C(auto)%d%Creset %s %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset'

	; # similar to whatchanged, but gives a dir-level overview:
	; # usage: git wd [diff-against=HEAD] [max-depth=4]
    ; wd = "!f() { git --paginate diff --dirstat=cumulative,files,0 ${1:-HEAD} | awk '{print $2}' | cut -d / -f1-${2:-4} | sort | uniq; }; f"
    glog = log -E -i --grep
[hub]
    host = github.iu.edu
[core]
    autocrlf = input
[push]
    default = upstream
[merge]
    ff = only
[fetch]
    prune = true
[commit]
    template = ~/.gitmessage
